[tool.poetry]
name = "libtimed"
version = "0.7.2"
description = "Library to intreact with timed webapp."
authors = [
  "Arthur Deierlein <arthur.deierlein@adfinis.com>",
  "Gian Klug <gian.klug@adfinis.com>",
]
readme = "README.md"
packages = [{ include = "libtimed", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.31.0"
keyring = ">=24.1,<26.0"
inflection = "^0.5.1"
requests-cache = "^1.1.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.3.2,<9.0.0"
pytest-coverage = "^0.0"
pdbpp = "^0.10.3"
ruff = ">=0.3.4,<0.5.0"

# Dependencies only used in examples
[tool.poetry.group.example.dependencies]
pyfzf = "^0.3.1"


[tool.ruff]
line-length = 100
src = ["src", "examples", "test"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = ["F","E","W","I","N", "D", "B", "Q", "C4", "UP", "PT", "T20", "RET", "RUF", "SLF", "SIM", "C90"]
ignore = [
    # make docstrings optional
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D211",
    "D213",
    "RUF012",
    # line length is handled by formatter
    "E501",
    # disable this for now
    "SLF001",
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
    # this conflicts for some reason
    "D203"
]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.ruff.lint.extend-per-file-ignores]
"examples/*.py" = ["T201"]
"src/libtimed/oidc.py" = ["T201"]

[tool.ruff.lint.isort]
known-first-party = ["libtimed"]
combine-as-imports = true

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
fail_under = 100
exclude_lines = [
  "pragma: no cover",
  "pragma: todo cover",
  "def __str__",
  "def __unicode__",
  "def __repr__",
]
omit = []
show_missing = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.semantic_release]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
major_on_zero = false
branch = "main"
build_command = "pip install poetry && poetry build"
